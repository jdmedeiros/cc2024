#!/bin/bash

# Variables
VPC_NAME="pdl-vpc"
VPC_CIDR="10.0.0.0/20"
REGION="us-east-1"
EXPECTED_AZS=1
EXPECTED_PUBLIC_SUBNETS=1
EXPECTED_PRIVATE_SUBNETS=2

# Fetch VPC ID based on Name and CIDR
VPC_ID=$(aws ec2 describe-vpcs --region $REGION --filters "Name=tag:Name,Values=$VPC_NAME" "Name=cidr,Values=$VPC_CIDR" --query "Vpcs[0].VpcId" --output text)

if [ "$VPC_ID" == "None" ] || [ -z "$VPC_ID" ]; then
    echo "VPC with name $VPC_NAME and CIDR $VPC_CIDR not found in region $REGION."
    exit 1
fi

echo "VPC $VPC_NAME found with ID $VPC_ID."

# Check Availability Zones
AZ_COUNT=$(aws ec2 describe-subnets --region $REGION --filters "Name=vpc-id,Values=$VPC_ID" --query "length(unique(Subnets[].AvailabilityZone))" --output text)

if [ "$AZ_COUNT" -eq "$EXPECTED_AZS" ]; then
    echo "Availability Zone count matches: $AZ_COUNT"
else
    echo "Expected $EXPECTED_AZS Availability Zones, but found $AZ_COUNT."
fi

# Check Public Subnets
PUBLIC_SUBNET_COUNT=$(aws ec2 describe-subnets --region $REGION --filters "Name=vpc-id,Values=$VPC_ID" "Name=map-public-ip-on-launch,Values=true" --query "length(Subnets)" --output text)

if [ "$PUBLIC_SUBNET_COUNT" -eq "$EXPECTED_PUBLIC_SUBNETS" ]; then
    echo "Public subnet count matches: $PUBLIC_SUBNET_COUNT"
else
    echo "Expected $EXPECTED_PUBLIC_SUBNETS public subnets, but found $PUBLIC_SUBNET_COUNT."
fi

# Check Private Subnets
PRIVATE_SUBNET_COUNT=$(aws ec2 describe-subnets --region $REGION --filters "Name=vpc-id,Values=$VPC_ID" "Name=map-public-ip-on-launch,Values=false" --query "length(Subnets)" --output text)

if [ "$PRIVATE_SUBNET_COUNT" -eq "$EXPECTED_PRIVATE_SUBNETS" ]; then
    echo "Private subnet count matches: $PRIVATE_SUBNET_COUNT"
else
    echo "Expected $EXPECTED_PRIVATE_SUBNETS private subnets, but found $PRIVATE_SUBNET_COUNT."
fi
